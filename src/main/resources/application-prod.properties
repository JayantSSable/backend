# Production Database Configuration
# These default values will be overridden by environment variables on Render.com
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:hospital_queue_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:}

# Hibernate settings
# Using 'create' for the initial deployment with multi-hospital changes
# IMPORTANT: This will recreate the database schema and delete all existing data
# After the first successful deployment, change this back to 'update'
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.show-sql=false

# Schema initialization strategy
# This ensures that Hibernate validates the schema against the entity mappings
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=none
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.drop-source=metadata

# Server configuration
server.port=${PORT:8080}

# CORS configuration
spring.mvc.cors.allowed-origins=${ALLOWED_ORIGINS:*}

# Logging
logging.level.root=INFO
logging.level.com.hospital.queue=INFO
logging.file.name=/var/log/hospital-queue/application.log

# WebSocket configuration
spring.websocket.enabled=true
