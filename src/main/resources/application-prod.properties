# Production Database Configuration
# These default values will be overridden by environment variables on Render.com
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:hospital_queue_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:}

# Hibernate settings
# Using 'create-drop' for the initial deployment with multi-hospital changes
# This ensures all tables are created before the application starts
# IMPORTANT: After the first successful deployment, change this back to 'update'
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

# Schema initialization - force table creation before data initialization
spring.jpa.generate-ddl=true
spring.jpa.defer-datasource-initialization=true

# Ensure Hibernate creates the schema before initializing data
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Server configuration
server.port=${PORT:8080}

# CORS configuration
spring.mvc.cors.allowed-origins=${ALLOWED_ORIGINS:*}

# Logging
logging.level.root=INFO
logging.level.com.hospital.queue=INFO
logging.file.name=/var/log/hospital-queue/application.log

# WebSocket configuration
spring.websocket.enabled=true
