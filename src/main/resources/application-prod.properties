# Production Database Configuration
# These default values will be overridden by environment variables on Render.com
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:hospital_queue_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:}

# Hibernate settings
# Changed from 'create-drop' to 'validate' to use Flyway migrations instead
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

# Disable schema generation by Hibernate
spring.jpa.generate-ddl=false

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=false
spring.flyway.repair-on-migrate=true
spring.flyway.create-schemas=true

# Allow non-contextual LOB creation
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Server configuration
server.port=${PORT:8080}

# CORS configuration is now handled in WebConfig.java
# spring.mvc.cors.allowed-origins=${ALLOWED_ORIGINS:*}

# Frontend URL for CORS and WebSocket configuration
app.frontend.url=${FRONTEND_URL:https://hospital-queue-frontend.onrender.com}

# Logging
logging.level.root=INFO
logging.level.com.hospital.queue=INFO
logging.file.name=/var/log/hospital-queue/application.log

# WebSocket configuration
spring.websocket.enabled=true

# Firebase Configuration
firebase.credentials.path=${FIREBASE_CREDENTIALS_PATH:/etc/secrets/firebase-service-account.json}
firebase.database.url=${FIREBASE_DATABASE_URL:}
